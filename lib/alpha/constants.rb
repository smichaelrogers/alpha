module Alpha
  P = 0
  N = 1
  B = 2
  R = 3
  Q = 4
  K = 5
  
  WHITE  = 0
  BLACK  = 1
  EMPTY  = 6
  NULL   = -1
  MAXPLY = 16
  INF    = 999_999_999
  
  FLIP   = [1, -1].freeze
  PIECES = %w(P N B R Q K).freeze
  FILES  = %w(a b c d e f g h).freeze
  RANKS  = %w(1 2 3 4 5 6 7 8).freeze
  UTF8   = [%w(♙ ♘ ♗ ♖ ♕ ♔), %w(♟ ♞ ♝ ♜ ♛ ♚)].freeze
  
  INIT_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'.freeze
  
  SQ = [
    21, 22, 23, 24, 25, 26, 27, 28,
    31, 32, 33, 34, 35, 36, 37, 38,
    41, 42, 43, 44, 45, 46, 47, 48,
    51, 52, 53, 54, 55, 56, 57, 58,
    61, 62, 63, 64, 65, 66, 67, 68,
    71, 72, 73, 74, 75, 76, 77, 78,
    81, 82, 83, 84, 85, 86, 87, 88,
    91, 92, 93, 94, 95, 96, 97, 98
  ].freeze
  
  PP = SQ.map { |i| FILES[(i % 10) - 1] + RANKS[9 - (i / 10)] } 
  SQ64 = Array.new(120) { -1 }.tap { |a| 
    64.times { |i| a[SQ[i]] = i } }.freeze
  
  class Search
    DIR     = [-10, 10].freeze
    STEP    = [-21, -19, -12, -8, 8, 12, 19, 21].freeze
    DIAG    = [11, -11, -9, 9].freeze
    ORTH    = [1, 10, -1, -10].freeze
    OCTL    = [-9, 9, -11, 11, -10, 10, -1, 1].freeze
    STEPS   = [DIR, STEP, DIAG, ORTH, OCTL, OCTL, DIR].freeze
    SLIDING = [false, false, true, true, true, false, false].freeze
    INNER_SQ = (40..80).freeze
    VAL =  [100, 320, 330, 540, 960, 0].freeze
    POS = [[24, 24, 24, 24, 24, 24, 24, 24, 18, 20, 20, 22, 22, 20, 20, 18, 10, 12, 14, 16, 16, 14, 10, 8, -4, -1,  6,  4,  4,  6, -1,-4, -4, -1,  2,  8,  8,  2, -1,-4,  -2, -1,  1,  2,  2,  1, -1,-2, 4,  6,  0,  1,  1,  0,  6, 4,  0,  0,  0,  0,  0,  0,  0, 0].freeze, 
           [-24, -6, -4, -2, -2, -4, -6, -24, -4, -2, 0, 1, 1, 0, -2, -4, -1, 1, 4, 6, 6, 4, 1, -1, -1, 1, 4, 6, 6, 4, 1, -1, -2, 0, 2, 4, 4, 2, 0, -2, -4, -2, -1, 1, 1, -1, -2, -4, -8, -6, -4, -2, -2, -4, -6, -8, -12, -6, -6, -6, -6, -6, -6, -12].freeze, 
           [-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, 1, 1, 1, 1, 0, -1, -1, 0, 1, 4, 4, 1, 0, -1, -1, 0, 2, 4, 4, 2, 0, -1, -1, 1, 2, 2, 2, 2, 1, -1, -1, 2, 1, 2, 2, 1, 2, -1, -1, -1, -4, -1, -1, -4, -1, -1].freeze, 
           [1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, -2, -1, 0, 0, 0, 0, -1, -2, -2, -1, 0, 0, 0, 0, -1, -2, -2, -1, 0, 0, 0, 0, -1, -2, -2, -1, 0, 0, 0, 0, -1, -2, -2, -1, 0, 0, 0, 0, -1, -2, 0, 0, 1, 1, 1, 1, 0, 0].freeze,
           [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1].freeze,
           [-10, -8, -12, -16, -16, -12, -8, -10, -8, -6, -10, -14, -14, -10, -6, -8, -6, -4, -8, -12, -12, -8, -4, -6, -2, 0, -6, -10, -10, -6, 0, -2, 0, 2, -2, -6, -6, -2, 2, 0, 2, 6, 0, -4, -4, 0, 6, 2, 8, 10, 6, 0, 0, 6, 10, 8, 10, 12, 8, 2, 2, 8, 12, 10].freeze].freeze 
  end
end